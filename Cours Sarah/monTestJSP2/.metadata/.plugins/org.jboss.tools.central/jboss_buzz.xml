<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Apache Camel 3 is out!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/aJweo0cd8SU/apache-camel-3-is-out.html" /><category term="announcements" scheme="searchisko:content:tags" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_jonanstey" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Jonathan Anstey</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_is_out</id><updated>2019-11-29T12:47:27Z</updated><published>2019-11-28T20:37:00Z</published><content type="html">Apache Camel 3.0.0 is &lt;a href="https://camel.apache.org/blog/release-3-0-0.html"&gt;out today&lt;/a&gt;! Why is this a big deal? Well, it's the first major Camel version released in TEN years. Yes, really :-) Camel 2 was released on August 25, 2009!&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/--m58_uLncPY/XeAu-o8BZEI/AAAAAAAAWFA/rl7Tauo9sUoGYgIvY0TWWDg-6HU9oa49wCLcBGAsYHQ/s1600/chameau-3-bossesV3-1-820x400.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="401" data-original-width="820" height="195" src="https://1.bp.blogspot.com/--m58_uLncPY/XeAu-o8BZEI/AAAAAAAAWFA/rl7Tauo9sUoGYgIvY0TWWDg-6HU9oa49wCLcBGAsYHQ/s400/chameau-3-bossesV3-1-820x400.jpg" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Apache Camel 2.x remains a rock solid integration framework used all around the world and will certainly live on for many years to come. But, for some changes (and to stick with semantic versioning) we really needed a major version bump. You can imagine over 10 years a project can accumulate a lot of "would be nice to do IF we could break API..." type issues :-) But don't be scared, the team managed to keep the migration as &lt;a href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"&gt;painless as possible&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;So what did change? Claus has a nice diagram of the &lt;a href="http://www.davsclaus.com/2019/10/apache-camel-3-is-only-2-months-away.html"&gt;major changes&lt;/a&gt; but there was definitely a focus on making camel-core smaller by breaking it up into modules (it was getting massive and size is becoming increasingly important in a cloud native world) and switching&amp;nbsp;to a more performant reactive routing engine. All told, since last year when we branched for Camel 3 development, over &lt;a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?version=12315691&amp;amp;projectId=12311211"&gt;1000 issues were resolved&lt;/a&gt;. It was a busy year for all involved!&lt;br /&gt;&lt;br /&gt;Next up are the releases of the other projects in the Camel ecosystem: &lt;a href="https://github.com/apache/camel-k/"&gt;Camel-K&lt;/a&gt;&amp;nbsp;(run Camel routes directly on Kubernetes) and &lt;a href="https://github.com/apache/camel-quarkus"&gt;Camel-Quarkus&lt;/a&gt;&amp;nbsp;(Camel components as &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt; extensions). Stay tuned.&lt;br /&gt;&lt;br /&gt;Thanks and congratulations to all involved in the release! Cheers!&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/aJweo0cd8SU" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel 3.0.0 is out today! Why is this a big deal? Well, it's the first major Camel version released in TEN years. Yes, really :-) Camel 2 was released on August 25, 2009! Apache Camel 2.x remains a rock solid integration framework used all around the world and will certainly live on for many years to come. But, for some changes (and to stick with semantic versioning) we really needed a majo...</summary><dc:creator>Jonathan Anstey</dc:creator><dc:date>2019-11-28T20:37:00Z</dc:date><feedburner:origLink>http://janstey.blogspot.com/2019/11/apache-camel-3-is-out.html</feedburner:origLink></entry><entry><title>Handling Angular environments in continuous delivery with Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-IWSzmu67wg/" /><category term="angular" scheme="searchisko:content:tags" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Mikel Sanchez</name></author><id>searchisko:content:id:jbossorg_blog-handling_angular_environments_in_continuous_delivery_with_red_hat_openshift</id><updated>2019-11-27T08:00:20Z</updated><published>2019-11-27T08:00:20Z</published><content type="html">&lt;p&gt;In this article, I will cover how we can deploy the same &lt;a href="https://angular.io/guide/build" target="_blank" rel="noopener noreferrer"&gt;Angular&lt;/a&gt; application image but use a different configuration for each environment. Before we start, however, let&amp;#8217;s review what we mean when we talk about &amp;#8220;continuous delivery.&amp;#8221; &lt;span id="more-651797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is continuous delivery?&lt;/h2&gt; &lt;p&gt;According to &lt;a href="https://www.continuousdelivery.com" target="_blank" rel="noopener noreferrer"&gt;ContinuousDelivery.com&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Continuous delivery is the ability to put changes of all types—including new features, configurations, bug fixes, and experiments—into production, or into the hands of users, &lt;em&gt;safely&lt;/em&gt; and &lt;em&gt;quickly&lt;/em&gt; in a &lt;em&gt;sustainable&lt;/em&gt; way.&lt;/p&gt; &lt;p&gt;Our goal is to make deployments—whether of a large-scale distributed system, a complex production environment, an embedded system, or an app—predictable, routine affairs that can be performed on demand.&lt;/p&gt; &lt;p&gt;We achieve all of this by ensuring that our code is &lt;em&gt;always&lt;/em&gt; in a deployable state, even in the face of teams of thousands of developers making changes on a daily basis. We thus completely eliminate the integration, testing, and hardening phases that traditionally followed &amp;#8220;dev complete,&amp;#8221; as well as code freezes.&lt;/p&gt;&lt;/blockquote&gt; &lt;h2&gt;How to handle Angular environments&lt;/h2&gt; &lt;p&gt;Angular applications typically have a config, containing settings like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;URLs to the APIs&lt;/li&gt; &lt;li&gt;App configuration based on the environment&lt;/li&gt; &lt;li&gt;Logs&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Angular&amp;#8217;s CLI offers &lt;a href="https://github.com/angular/angular-cli/wiki/stories-application-environments" target="_blank" rel="noopener noreferrer"&gt;application environments&lt;/a&gt; that set up the environment at build time.&lt;/p&gt; &lt;p&gt;In Angular, if you look into the &lt;code&gt;angular.json&lt;/code&gt; file, you can see how the app will be built and its environment-specific setup:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;"configurations": {             "production": {               "fileReplacements": [                 {                   "replace": "src/environments/environment.ts",                   "with": "src/environments/environment.prod.ts"                 }               ],&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;The &lt;code&gt;fileReplacements&lt;/code&gt; section lets you replace the files needed for each environment at build time.&lt;/p&gt; &lt;p&gt;We can deduce by looking into the code that when we run &lt;code&gt;ng build&lt;/code&gt; &lt;code&gt;--configuration=production&lt;/code&gt; the &lt;code&gt;src/envrionments/envrironment.ts&lt;/code&gt; file is replaced with &lt;code&gt;src/envrionments/envrionment.prod.ts&lt;/code&gt;. As a result, if you import &lt;code&gt;environments/environment.ts&lt;/code&gt; into your application to access the environment variables property, you will get the desired value.&lt;/p&gt; &lt;p&gt;Angular&amp;#8217;s CLI makes all the magic:&lt;/p&gt; &lt;pre&gt;import { Component } from '@angular/core'; import { environment } from './../environments/environment'; @Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css'] }) export class AppComponent { constructor() { console.log(environment.&amp;#60;property&amp;#62;); } title = 'app works!'; } &lt;/pre&gt; &lt;p&gt;But this setup is not good for continuous delivery, as we have one image for each environment, as shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_651737" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-651737" class="wp-image-651737 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-1024x698.png" alt="" width="640" height="436" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-1024x698.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-300x205.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-768x524.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-651737" class="wp-caption-text"&gt;Figure 1: Not the best setup for continuous delivery.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;There is another approach, however. We can solve this problem by only building the image once and then promoting it to other environments using this approach:&lt;/p&gt; &lt;p&gt;Under &lt;code&gt;assets/config&lt;/code&gt;, create a JSON file with the properties:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;{     "server1": "url1",     "server2": "url2",     "server3": "url3" }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Create a new provider:&lt;/p&gt; &lt;pre&gt;ng g s providers/appConfig&lt;/pre&gt; &lt;p&gt;Replace the contents with the following:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { Injectable } from '@angular/core'; import { HttpClient } from '@angular/common/http'; @Injectable({   providedIn: 'root' }) export class AppConfigService {   private config: any;   constructor(private http: HttpClient) { }   public loadConfig() {     return this.http.get('./assets/config/config.json')       .toPromise()       .then((config: any) =&amp;#62; {         this.config = config;         console.log(this.config);       })       .catch((err: any) =&amp;#62; {         console.error(err);       });   }   getConfig() {     return this.config;   } }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Modify the &lt;code&gt;app.module.ts&lt;/code&gt; with the following code:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { BrowserModule } from '@angular/platform-browser'; import { NgModule, APP_INITIALIZER } from '@angular/core'; import { AppComponent } from './app.component'; import { AppConfigService } from './providers/app-config.service'; import { HttpClientModule } from '@angular/common/http'; export function initConfig(appConfig: AppConfigService) {   return () =&amp;#62; appConfig.loadConfig(); } @NgModule({   declarations: [     AppComponent   ],   imports: [     BrowserModule,     HttpClientModule   ],   providers: [{     provide: APP_INITIALIZER,     useFactory: initConfig,     deps: [AppConfigService],     multi: true,   }],   bootstrap: [AppComponent] }) export class AppModule { }&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Here, we added the &lt;code&gt;APP_INITIALIZER&lt;/code&gt; provider to load before the app&amp;#8217;s bootstrap, which lets us have the configuration before the app initialization. We then use a factory that calls &lt;code&gt;appService.loadConfig()&lt;/code&gt;. Then, if we want to use it from the component, we inject the service and get the config:&lt;/p&gt; &lt;div&gt; &lt;pre&gt;import { Component } from '@angular/core'; import { HttpClient } from '@angular/common/http'; import { AppConfigService } from './providers/app-config.service'; @Component({   selector: 'app-root',   templateUrl: './app.component.html',   styleUrls: ['./app.component.css'] }) export class AppComponent {   title = 'app'; constructor(private http: HttpClient, private config: AppConfigService) { console.log(this.config.getConfig()); }&lt;/pre&gt; &lt;/div&gt; &lt;h2&gt;How to apply the configuration in Red Hat OpenShift&lt;/h2&gt; &lt;p&gt;To use our environment-specific configuration, we just need to create a &lt;code&gt;ConfigMap&lt;/code&gt; and then create a new volume from the &lt;code&gt;ConfigMap&lt;/code&gt;(We are going to suppose that the app is already deployed and using &lt;code&gt;nginx&lt;/code&gt; as base image)&lt;/p&gt; &lt;pre&gt;oc create configmap config --from-file=&amp;#60;configMapLocation&amp;#62;/config.json&lt;/pre&gt; &lt;p&gt;Now, set the volume in the deployment config:&lt;/p&gt; &lt;pre&gt;oc set volume dc/angular --add --type=configmap --configmap-name=config --mount-path=/opt/app-root/src/assets/config --overwrite&lt;/pre&gt; &lt;p&gt;Figure 2 shows what our architecture will ultimately look like:&lt;/p&gt; &lt;div id="attachment_651777" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-651777" class="wp-image-651777 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-1024x584.png" alt="" width="640" height="365" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-1024x584.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/CD-Angular-Final-768x438.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-651777" class="wp-caption-text"&gt;Figure 2: Our final architecture layout.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;I hope you found this article useful.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#38;linkname=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F27%2Fhandling-angular-environments-in-continuous-delivery-with-red-hat-openshift%2F&amp;#038;title=Handling%20Angular%20environments%20in%20continuous%20delivery%20with%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/" data-a2a-title="Handling Angular environments in continuous delivery with Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/"&gt;Handling Angular environments in continuous delivery with Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-IWSzmu67wg" height="1" width="1" alt=""/&gt;</content><summary>In this article, I will cover how we can deploy the same Angular application image but use a different configuration for each environment. Before we start, however, let’s review what we mean when we talk about “continuous delivery.” What is continuous delivery? According to ContinuousDelivery.com: Continuous delivery is the ability to put changes of all types—including new features, configurations...</summary><dc:creator>Mikel Sanchez</dc:creator><dc:date>2019-11-27T08:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/27/handling-angular-environments-in-continuous-delivery-with-red-hat-openshift/</feedburner:origLink></entry><entry><title>Code Ready Containers - Getting Started with HR Employee Rewards Project in the Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EUh0zS06--M/code-ready-containers-getting-started-with-hr-employee-rewards.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyContainers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-code_ready_containers_getting_started_with_hr_employee_rewards_project_in_the_cloud</id><updated>2019-11-27T06:00:01Z</updated><published>2019-11-27T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-e8-A0G1vw6k/Xd0Iz_ewOaI/AAAAAAAAwvY/XCQ7K16HEoAw6-S3lEcAdRb6CF8ZJ_degCNcBGAsYHQ/s1600/process-designer.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="hr employee rewards" border="0" data-original-height="780" data-original-width="1600" height="156" src="https://1.bp.blogspot.com/-e8-A0G1vw6k/Xd0Iz_ewOaI/AAAAAAAAwvY/XCQ7K16HEoAw6-S3lEcAdRb6CF8ZJ_degCNcBGAsYHQ/s320/process-designer.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;AppDev in Cloud HR Employee Rewards&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by &lt;a href="https://www.schabell.org/2019/11/how-to-setup-openshift-container-platform-in-minutes.html" target="_blank"&gt;updating the Code Ready Containers Easy Install&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging this local container platform cluster for some cloud native development experience, focusing on bringing all the existing content up to date.&lt;br /&gt;&lt;br /&gt;This articles outlines getting started with the &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;HR Employee Rewards project&lt;/a&gt; on the above installation as default, though you can point this installation to any existing OpenShift Container Platform (pass an IP address).&lt;br /&gt;&lt;br /&gt;Let's take a look at how easy it is to get started with &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;Code Ready Containers HR Employee Rewards Demo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Wb1Z1SZ-Nlk/Xd0IjCrTgiI/AAAAAAAAwvQ/zpJ2mLcS76EpY06dgUFAYRf3y9Pji0mtwCNcBGAsYHQ/s1600/rhcs-rewards-pod.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="hr employee rewards" border="0" data-original-height="990" data-original-width="1600" height="197" src="https://1.bp.blogspot.com/-Wb1Z1SZ-Nlk/Xd0IjCrTgiI/AAAAAAAAwvQ/zpJ2mLcS76EpY06dgUFAYRf3y9Pji0mtwCNcBGAsYHQ/s320/rhcs-rewards-pod.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;HR Employee Rewards deployed on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Anyone spending any time with the content found on &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank"&gt;Red Hat Demo Central&lt;/a&gt; should notice that all projects are designed using a template for consistent installation experiences.&lt;br /&gt;&lt;br /&gt;This one is no different and you can follow the same installation steps you would expect in the readme file:&lt;br /&gt;&lt;br /&gt;&lt;h2 data-sourcepos="10:1-12:132" dir="auto"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo" target="_blank"&gt;Install on OpenShift Container Platform&lt;/a&gt;&lt;/h2&gt;&lt;div data-sourcepos="12:1-13:83" dir="auto"&gt;There are two options to install and run this project on the OpenShift Container Platform (OCP); use your own existing installation or to install on Code Ready Containers which provides you with a local OCP cluster.&lt;/div&gt;&lt;ol data-sourcepos="15:1-16:0" dir="auto"&gt;&lt;li data-sourcepos="15:1-16:0"&gt;Ensure you have an OpenShift container based installation, such as one of the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul data-sourcepos="17:3-21:0" style="text-align: left;"&gt;&lt;li&gt;your own OpenShift installation, if using this, just pass the IP address to the init.{sh|bat} script.&lt;/li&gt;&lt;li data-sourcepos="19:3-21:0"&gt;&lt;div data-sourcepos="19:5-19:95"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;Code Ready Containers Easy Install&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-sourcepos="22:1-27:0" dir="auto" start="2"&gt;&lt;li data-sourcepos="22:1-23:0"&gt;&lt;div data-sourcepos="22:4-22:136"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rewards-demo/-/archive/master/rhcs-rewards-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="24:1-25:0"&gt;&lt;div data-sourcepos="24:4-24:116"&gt;Download Red Hat JBoss EAP &amp;amp; Red Hat Process Automation Manager, add to installs directory (see installs/README).&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="26:1-27:0"&gt;&lt;div data-sourcepos="26:4-26:91"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using your own installation just point to Openshift Container Platform IP Address&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" lang="plaintext"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" lang="plaintext"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext" v-pre="true"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using Code Ready Containers or the Code Ready Containers Easy Install project, just add the cluster &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # address to HOST_IP variable found at the top of the init.{sh|bat} files, for example:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; # HOST_IP=api.crc.testing &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC5" lang="plaintext"&gt; # &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC6" lang="plaintext"&gt; # Now just run the script without any IP address arguments and it picks up that hostname as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC7" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC8" lang="plaintext"&gt; $ ./init.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div data-sourcepos="46:1-46:151" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div data-sourcepos="46:1-46:151" dir="auto"&gt;Log in to the HR Employee Rewards project to start exploring an online employee rewards application (the address will be generated by the init script):&lt;/div&gt;&lt;ul data-sourcepos="48:3-49:0" dir="auto"&gt;&lt;li data-sourcepos="48:3-49:0"&gt;Code Ready Container example: http:rhcs-rewards-demo-appdev-in-cloud.apps-crc.testing/business-central ( u:erics / p:redhatpam1! )&lt;/li&gt;&lt;/ul&gt;Want to build the Rewards demo from scratch? Try this hands-on &lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab01.html" rel="nofollow noreferrer noopener" target="_blank"&gt;online workshop&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=Fz3qrlzaKrk:BsreN_x-Q5k:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=Fz3qrlzaKrk:BsreN_x-Q5k:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/Fz3qrlzaKrk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EUh0zS06--M" height="1" width="1" alt=""/&gt;</content><summary>AppDev in Cloud HR Employee RewardsPreviously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by updating the Code Ready Containers Easy Install. As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging t...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-27T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/Fz3qrlzaKrk/code-ready-containers-getting-started-with-hr-employee-rewards.html</feedburner:origLink></entry><entry><title>Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DoAIXDzFGZY/" /><category term="Apache Kafka" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Red Hat 3scale API Management" scheme="searchisko:content:tags" /><category term="Red Hat AMQ Streams" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><author><name>Hugo Guerrero</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_simplifies_transition_to_open_source_kafka_with_new_service_registry_and_http_bridge</id><updated>2019-11-26T08:00:26Z</updated><published>2019-11-26T08:00:26Z</published><content type="html">&lt;p&gt;Red Hat continues to increase the features available for users looking to implement a 100% open source, &lt;a href="https://developers.redhat.com/topics/event-driven/"&gt;event-driven architecture&lt;/a&gt; (EDA) through running &lt;a href="https://developers.redhat.com/videos/youtube/QYbXDp4Vu-8/"&gt;Apache Kafka&lt;/a&gt; on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Red Hat Enterprise Linux&lt;/a&gt;. The &lt;a href="https://www.redhat.com/en/products/integration"&gt;Red Hat Integration&lt;/a&gt; Q4 release provides new features and capabilities, including ones aimed at simplifying usage and deployment of the &lt;a href="https://www.redhat.com/en/resources/amq-streams-datasheet"&gt;AMQ streams&lt;/a&gt; distribution of Apache Kafka. &lt;span id="more-658227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Features available in this new version include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Service Registry as Technical Preview&lt;/li&gt; &lt;li&gt;HTTP-Kafka bridge is now generally available&lt;/li&gt; &lt;li&gt;Secure HTTP-Kafka bridge with 3scale API Management&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The addition of the service registry and the HTTP Kafka bridge improves Red Hat positioning as the 100% open source platform for cloud-native Kafka workloads. These new features become a suitable complement to the usage of the Kafka Operator for OpenShift based on the &lt;a href="https://strimzi.io/2019/09/06/cncf.html"&gt;CNCF sandbox project Strimzi&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Schema service registry for event-driven architecture&lt;/h2&gt; &lt;p&gt;Red Hat Integration’s service registry, based on the &lt;a href="https://www.apicur.io/"&gt;Apicurio project&lt;/a&gt; registry, provides a way to decouple the schema used to serialize and deserialize Kafka messages with the applications that are sending/receiving them. The registry is a store for schema (and API design) artifacts providing a REST API for access management and a set of optional rules for enforcing content validity and evolution.&lt;/p&gt; &lt;p&gt;The Apicurio service registry handles the following data formats:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apache Avro&lt;/li&gt; &lt;li&gt;JSON Schema&lt;/li&gt; &lt;li&gt;Protobuf (protocol buffers)&lt;/li&gt; &lt;li&gt;OpenAPI&lt;/li&gt; &lt;li&gt;AsyncAPI&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition to the registry itself, users can leverage the included custom Kafka serializers and deserializers (SerDes). These SerDes Java classes allow Kafka applications to pull relevant schemas from the Service Registry instead of requiring the schemas to be bundled with the applications.&lt;/p&gt; &lt;p&gt;Correspondingly, the registry has its own REST API to create, update, and delete artifacts as well as managing global and per-artifact rules. The registry API is compatible with another Kafka provider’s schema registry to facilitate a seamless migration to AMQ Streams as a drop-in replacement.&lt;/p&gt; &lt;p&gt;For the upcoming &lt;a href="https://access.redhat.com/support/offerings/techpreview"&gt;technical preview&lt;/a&gt;, only the Avro format will be included in the service registry for the Red Hat Integration release.&lt;/p&gt; &lt;h2&gt;Connecting to Kafka through HTTP&lt;/h2&gt; &lt;p&gt;Apache Kafka uses a custom protocol on top of TCP/IP for communication between applications and the cluster. Clients are available for many different programming languages, but there are many scenarios in which a standard protocol such as HTTP/1.1 is more appropriate.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html-single/using_amq_streams_on_openshift/index#assembly-kafka-bridge-overview-str"&gt;Red Hat AMQ Streams Kafka Bridge&lt;/a&gt; provides an API for integrating HTTP-based clients with a Kafka cluster running on AMQ Streams. Applications can perform typical operations such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Sending messages to topics.&lt;/li&gt; &lt;li&gt;Subscribing to one or more topics.&lt;/li&gt; &lt;li&gt;Receiving messages from the subscribed topics.&lt;/li&gt; &lt;li&gt;Committing offsets related to the received messages.&lt;/li&gt; &lt;li&gt;Seeking to a specific position.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Users can deploy the Kafka Bridge into an OpenShift cluster by using the AMQ Streams Operator or similar to an AMQ Streams installation, and users can download the Kafka Bridge files for installation on Red Hat Enterprise Linux.&lt;/p&gt; &lt;p&gt;Users can provide TLS support, authentication, and authorization using the API Management capabilities of Red Hat Integration by &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html-single/using_amq_streams_on_openshift/index#kafka-bridge-3-scale-str"&gt;securing the Kafka Bridge with the 3scale&lt;/a&gt; component. Integration with API Management also means that additional features such as metrics, rate limiting, and billing are available.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;The Red Hat Integration Q4 release makes Red Hat’s AMQ Streams distribution a better open source platform for cloud-native Kafka workloads. The Service Registry technical preview provides a common ground for data governance in the ever-changing domain of the event management bus. The general availability of the HTTP Bridge in Red Hat Integration enhances the options available to developers when building applications with Apache Kafka.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#38;linkname=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fred-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge%2F&amp;#038;title=Red%20Hat%20simplifies%20transition%20to%20open%20source%20Kafka%20with%20new%20service%20registry%20and%20HTTP%20bridge" data-a2a-url="https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/" data-a2a-title="Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/"&gt;Red Hat simplifies transition to open source Kafka with new service registry and HTTP bridge&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DoAIXDzFGZY" height="1" width="1" alt=""/&gt;</content><summary>Red Hat continues to increase the features available for users looking to implement a 100% open source, event-driven architecture (EDA) through running Apache Kafka on Red Hat OpenShift and Red Hat Enterprise Linux. The Red Hat Integration Q4 release provides new features and capabilities, including ones aimed at simplifying usage and deployment of the AMQ streams distribution of Apache Kafka.  Fe...</summary><dc:creator>Hugo Guerrero</dc:creator><dc:date>2019-11-26T08:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/26/red-hat-simplifies-transition-to-open-source-kafka-with-new-service-registry-and-http-bridge/</feedburner:origLink></entry><entry><title>Set up Red Hat AMQ 7 custom certificates on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nh0YRl8hBtU/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><category term="TLS" scheme="searchisko:content:tags" /><author><name>Federico Valeri</name></author><id>searchisko:content:id:jbossorg_blog-set_up_red_hat_amq_7_custom_certificates_on_openshift</id><updated>2019-11-26T08:00:02Z</updated><published>2019-11-26T08:00:02Z</published><content type="html">&lt;p&gt;Secure communication over a computer network is one of the most important requirements for a system, and yet it can be difficult to set up correctly. This example shows how to set up &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/amq" target="_blank" rel="noopener noreferrer"&gt;Red Hat AMQ 7&lt;/a&gt; end-to-end TLS encryption using a custom X.509 certificate on the &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; platform.&lt;/p&gt; &lt;h3&gt;Prerequisites&lt;/h3&gt; &lt;p&gt;You need to have the following in place before you can proceed with this example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;An OpenShift cluster up and running.&lt;/li&gt; &lt;li&gt;A custom X.509 certificate in PEM format (along with its chain).&lt;/li&gt; &lt;li&gt;An active &lt;a href="https://access.redhat.com/"&gt;Red Hat Customer Portal&lt;/a&gt; account.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-651227"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The procedure&lt;/h2&gt; &lt;p&gt;Before we start, let&amp;#8217;s define a few handy variables:&lt;/p&gt; &lt;pre&gt;PROJECT="demo" USER="developer" BASEURL="https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/74-7.4.0.GA"&lt;/pre&gt; &lt;p&gt;The first step is to log in and create a new project to host our broker:&lt;/p&gt; &lt;pre&gt;oc login -u $USER -p x oc new-project $PROJECT&lt;/pre&gt; &lt;p&gt;Then, we need to create a dedicated ServiceAccount for deployment and add the view role:&lt;/p&gt; &lt;pre&gt;echo '{"kind": "ServiceAccount", "apiVersion": "v1", "metadata": {"name": "amq-service-account"}}' | oc create -f - oc policy add-role-to-user view system:serviceaccount:$PROJECT:amq-service-account&lt;/pre&gt; &lt;p&gt;At this point, we should have all custom certificate files available. Most likely, this signed custom certificate came from the security team, along with its private key and the whole certificate&amp;#8217;s chain (all in PEM format).&lt;/p&gt; &lt;p&gt;The certificate files consist of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;rootca.pem&lt;/strong&gt;: The root Certificate Authority (CA) in our domain.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;interm.pem&lt;/strong&gt;: An intermediate CA created to sign the certificate in a specific context.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;server.pem&lt;/strong&gt;: The final server certificate, which can be issued for single or multiple domains (wildcard).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;server-prk.pem&lt;/strong&gt;: The private key associated with our server&amp;#8217;s certificate.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Using these files, create a server KeyStore, convert it to Java KeyStore (JKS) format, and then trust the chain of certificates used to sign it:&lt;/p&gt; &lt;pre&gt;cat interm.pem rootca.pem &amp;#62; chain.pem cat server.pem chain.pem &amp;#62; bundle.pem openssl pkcs12 -export -in bundle.pem -inkey server-prk.pem -out server.p12 -name server -CAfile chain.pem -passout pass:secret keytool -importkeystore -alias server -srcstoretype PKCS12 -srckeystore server.p12 -srcstorepass secret -destkeystore server.jks -deststorepass secret keytool -import -noprompt -trustcacerts -alias chain -file chain.pem -keystore server.jks -storepass secret&lt;/pre&gt; &lt;p&gt;When the server KeyStore is ready, it can be imported into a Secret that must also be added to the ServiceAccount created earlier:&lt;/p&gt; &lt;pre&gt;oc create secret generic amq-app-secret --from-file=server.jks oc secrets add sa/amq-service-account secret/amq-app-secret&lt;/pre&gt; &lt;p&gt;In this example, we use the persistent AMQ 7 SSL template, because we usually want our messages to survive a broker shutdown. Let&amp;#8217;s create the image stream and download the broker&amp;#8217;s template:&lt;/p&gt; &lt;pre&gt;oc login -u system:admin oc replace --force -f $BASEURL/amq-broker-7-image-streams.yaml curl -o broker.yaml $BASEURL/templates/amq-broker-74-persistence-ssl.yaml&lt;/pre&gt; &lt;p&gt;To be able to download the broker&amp;#8217;s image from the Red Hat Container Registry, we also need to add an authentication Secret and link it to the default ServiceAccount:&lt;/p&gt; &lt;pre&gt;oc create secret docker-registry registry-auth \ --docker-server=registry.redhat.io \ --docker-username=&amp;#60;portal-username&amp;#62; \ --docker-password=&amp;#60;portal-password&amp;#62; oc secrets link default registry-auth --for=pull&lt;/pre&gt; &lt;p&gt;The next step is to deploy the broker using the downloaded template and pass our KeyStore as a parameter:&lt;/p&gt; &lt;pre&gt;oc login -u $USER -p x oc process -f broker.yaml \ -p APPLICATION_NAME=$PROJECT \ -p AMQ_USER=admin \ -p AMQ_PASSWORD=admin \ -p AMQ_TRUSTSTORE=server.jks \ -p AMQ_TRUSTSTORE_PASSWORD=secret \ -p AMQ_KEYSTORE=server.jks \ -p AMQ_KEYSTORE_PASSWORD=secret \ | oc create -f -&lt;/pre&gt; &lt;p&gt;We are almost finished. The last step is to create a service and a passthrough route to expose the desired port to the external world. Here we are exposing the AMQP port, but you can do the same with the other available protocols:&lt;/p&gt; &lt;pre&gt;oc create -f - &amp;#60;&amp;#60;EOF apiVersion: v1 kind: Service metadata: labels: application: $PROJECT-amq name: broker-amq-amqp-ssl spec: ports: - port: 5671 targetPort: 5671 selector: statefulset.kubernetes.io/pod-name: $PROJECT-amq-0 EOF oc create route passthrough --service=broker-amq-amqp-ssl&lt;/pre&gt; &lt;h2&gt;Java client setup&lt;/h2&gt; &lt;p&gt;You can use your preferred JMS library to build your client, but you will certainly need a truststore in JKS format for one-way TLS authentication:&lt;/p&gt; &lt;pre&gt;keytool -import -noprompt -file server.pem -alias server -keystore truststore.jks -storepass secret&lt;/pre&gt; &lt;p&gt;If you want to access the broker from outside OpenShift, then you also need to use a ConnectionFactory URL similar to this one:&lt;/p&gt; &lt;pre&gt;amqps://broker-amq-amqp-ssl-demo.192.168.64.53.nip.io:443?transport.verifyHost=false&amp;#38;transport.trustStoreLocation=src/main/resources/truststore.jks&amp;#38;transport.trustStorePassword=secret&lt;/pre&gt; &lt;h3&gt;Additional notes&lt;/h3&gt; &lt;p&gt;You must bind the hostname you are using in the certificate&amp;#8217;s CN field to the cluster&amp;#8217;s HAProxy IP address in your DNS server. If you are using a homemade CA, then you also need to trust the chain on the client machine to access the Hawtio web console.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#38;linkname=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F26%2Fset-up-red-hat-amq-7-custom-certificates-on-openshift%2F&amp;#038;title=Set%20up%20Red%20Hat%20AMQ%207%20custom%20certificates%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/11/26/set-up-red-hat-amq-7-custom-certificates-on-openshift/" data-a2a-title="Set up Red Hat AMQ 7 custom certificates on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/26/set-up-red-hat-amq-7-custom-certificates-on-openshift/"&gt;Set up Red Hat AMQ 7 custom certificates on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nh0YRl8hBtU" height="1" width="1" alt=""/&gt;</content><summary>Secure communication over a computer network is one of the most important requirements for a system, and yet it can be difficult to set up correctly. This example shows how to set up Red Hat AMQ 7 end-to-end TLS encryption using a custom X.509 certificate on the Red Hat OpenShift platform. Prerequisites You need to have the following in place before you can proceed with this example: An OpenShift ...</summary><dc:creator>Federico Valeri</dc:creator><dc:date>2019-11-26T08:00:02Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/26/set-up-red-hat-amq-7-custom-certificates-on-openshift/</feedburner:origLink></entry><entry><title>Infinispan Operator 1.0.1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_MvBfrHQ-8M/" /><category term="dev-preview" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Vittorio Rigamonti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_operator_1_0_1</id><updated>2019-11-26T10:50:13Z</updated><published>2019-11-25T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Dear Infinispan community,&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;we know you are happy with the new shining 10.0.0 Infinispan release, but if you are among those who are missing a new operator version for safely running your Infinispan Chupachabra in the clound, this post is for you!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_versioning_and_channels"&gt;&lt;a class="anchor" href="#_versioning_and_channels"&gt;&lt;/a&gt;Versioning and channels&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is our first blog post about 1.0.x operator series (yeah, sorry 1.0.0 we forgot about you) and as you can notice there’s no Alpha, Beta or CR label at the end of the release tag. This is because OperatorHub and Openshift Catalog only allow numerical version like Maj.Min.Mic and instead of labels we now use the channel to indicate the stability of a release. We have 2 live channels at the moment for the Infinispan operator: &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;dev-preview&lt;/code&gt;. Current &lt;code&gt;stable&lt;/code&gt; is 0.3.2 which is for the 9.x Infinispan cluster and current &lt;code&gt;dev-preview&lt;/code&gt; is 1.0.1 which works with 10.x clusters.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_new_features"&gt;&lt;a class="anchor" href="#_new_features"&gt;&lt;/a&gt;New features&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New Infinispan image configuration: we cleaned up the image configuration process: instead of rely on a large set of env variables, now the operator configures the Infinispan image via a single .yaml file.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Container configurability: CR .yaml file lets you configure memory and CPU (and also extras Java opts) assigned to the container;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Encryption: TLS can be setup providing TLS certificates or using platform service as the Openshift seriving certs service (TLS will be on by default in the next release);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;We now have some good docs: &lt;a href="https://infinispan.org/infinispan-operator/master/operator.html" class="bare"&gt;https://infinispan.org/infinispan-operator/master/operator.html&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Project README has been also improved: &lt;a href="https://github.com/infinispan/infinispan-operator/blob/1.0.1/README.md" class="bare"&gt;https://github.com/infinispan/infinispan-operator/blob/1.0.1/README.md&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_get_it"&gt;&lt;a class="anchor" href="#_get_it"&gt;&lt;/a&gt;Get it&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Infinispan Operator 1.0.1 works on Kind/Kubernetes 1.16 (CI) and Openshift 3.11, 4.x (developed on). You can install it:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;manually, follow the README;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;with OLM on Kubernetes, &lt;a href="https://operatorhub.io/operator/infinispan/dev-preview/infinispan-operator.v1.0.0" class="bare"&gt;https://operatorhub.io/operator/infinispan/dev-preview/infinispan-operator.v1.0.0&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;with OLM from the Openshift Operator Catalog&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And remember: it’s a dev-preview release, you can have a lot of fun with it!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_contribute"&gt;&lt;a class="anchor" href="#_contribute"&gt;&lt;/a&gt;Contribute&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As usual source code is open at: &lt;a href="https://github.com/infinispan/infinispan-operator" class="bare"&gt;https://github.com/infinispan/infinispan-operator&lt;/a&gt;. You can see what’s going on, comment the code or the new pull requests, ask for new features and also develop them!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thanks for following us, Infinispan&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_MvBfrHQ-8M" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan community, we know you are happy with the new shining 10.0.0 Infinispan release, but if you are among those who are missing a new operator version for safely running your Infinispan Chupachabra in the clound, this post is for you! Versioning and channels This is our first blog post about 1.0.x operator series (yeah, sorry 1.0.0 we forgot about you) and as you can notice there’s no ...</summary><dc:creator>Vittorio Rigamonti</dc:creator><dc:date>2019-11-25T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2019/11/25/infinispan-operator-1/</feedburner:origLink></entry><entry><title>Kogito tooling for friendly DMN and BPMN visualization on GitHub</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/y10ynmrm-aI/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="kogito" scheme="searchisko:content:tags" /><category term="Red Hat BPM Suite" scheme="searchisko:content:tags" /><author><name>Karina Varela</name></author><id>searchisko:content:id:jbossorg_blog-kogito_tooling_for_friendly_dmn_and_bpmn_visualization_on_github</id><updated>2019-11-25T08:00:51Z</updated><published>2019-11-25T08:00:51Z</published><content type="html">&lt;p&gt;Business automation is highly dependent on the development of business processes and rules that are easily understood by anyone involved with the project. To achieve this goal, the &lt;a href="https://kogito.kie.org/"&gt;KIE and Kogito&lt;/a&gt; teams choose to adopt the usage of patterns defined by &lt;a href="https://en.wikipedia.org/wiki/Object_Management_Group"&gt;OMG&lt;/a&gt; as the triple crown of process management:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;DMN&lt;/strong&gt; — Decision Model and Notation&lt;/li&gt; &lt;li&gt;&lt;strong&gt; BPMN&lt;/strong&gt; — Business Process Model and Notation&lt;/li&gt; &lt;li&gt;&lt;strong&gt;CMMN&lt;/strong&gt; — Case Management Model and Notation&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With this new &lt;a href="https://medium.com/kie-foundation/bpmn-chrome-extension-released-alpha-abe89676d76"&gt;BPMN and DMN Chrome extension&lt;/a&gt;, you can finally see business processes and rules directly on GitHub.&lt;/p&gt; &lt;p&gt;If you work with business automation projects, you are probably familiar with these standards. Additionally, you&amp;#8217;ve probably been frustrated by facing a huge XML file while trying to see the latest changes or checking a business asset on GitHub. If that is your case, you will probably love this Chrome extension: It allows users to see business processes and business rules versioned as BPMN and DMN files directly on the GitHub webpage.&lt;span id="more-649817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;How this helps&lt;/h2&gt; &lt;p&gt;If you are curious about this extension and how it helps, see in Figure 1 how a BPMN file is displayed in GitHub by default, and then see in Figure 2 how this same file is displayed with the BPMN and DMN Chrome extension. If you feel like trying this extension out yourself, keep reading.&lt;/p&gt; &lt;div id="attachment_650897" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-650897" class="wp-image-650897 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.05.37-1024x783.png" alt="" width="640" height="489" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.05.37-1024x783.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.05.37-300x229.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.05.37-768x587.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.05.37.png 1050w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-650897" class="wp-caption-text"&gt;Figure 1: A BPMN file is displayed in GitHub, without the extension.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_650917" style="width: 410px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-650917" class="wp-image-650917" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.08.40-300x245.png" alt="" width="400" height="326" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.08.40-300x245.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.08.40-768x627.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.08.40.png 1022w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;p id="caption-attachment-650917" class="wp-caption-text"&gt;Figure 2: A BPMN file displayed with the BPMN and DMN Chrome extension.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;How to install&lt;/h2&gt; &lt;p&gt;This tool is still not available in the Chrome store, but you can already try it out and take advantage of its benefits. To have this extension working on your Chrome browser, follow these simple steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Access the &lt;a href="https://github.com/kiegroup/kogito-tooling/releases" target="_blank" rel="noopener noreferrer"&gt;Kogito Tooling release pages&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Look for the latest release and click the link, then scroll down to the end of the release notes.&lt;/li&gt; &lt;li&gt;Click on &lt;em&gt;Assets&lt;/em&gt; to expand the menu and see the available options, as shown in Figure 3:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_650927" style="width: 410px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-650927" class="wp-image-650927" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.15.08-300x78.png" alt="" width="400" height="103" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.15.08-300x78.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.15.08-768x199.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.15.08.png 812w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;p id="caption-attachment-650927" class="wp-caption-text"&gt;Figure 3: Open the Assets menu to find the Chrome extension.&lt;/p&gt;&lt;/div&gt; &lt;ol start="4"&gt; &lt;li&gt;Download and unzip the available ZIP file.&lt;/li&gt; &lt;li&gt;In Chrome, go to the upper right corner and then access and activate the Developer mode, as shown in Figure 4:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_650947" style="width: 606px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-650947" class="wp-image-650947 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.17.16.png" alt="" width="596" height="119" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.17.16.png 596w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.17.16-300x60.png 300w" sizes="(max-width: 596px) 100vw, 596px" /&gt;&lt;p id="caption-attachment-650947" class="wp-caption-text"&gt;Figure 4: Turn on Developer mode.&lt;/p&gt;&lt;/div&gt; &lt;ol start="6"&gt; &lt;li&gt;Click on &lt;em&gt;Load unpacked&lt;/em&gt; button and choose the directory you just unzipped, as shown in Figure 5:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_650957" style="width: 444px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-650957" class="wp-image-650957 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.20.22.png" alt="" width="434" height="229" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.20.22.png 434w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-06-at-23.20.22-300x158.png 300w" sizes="(max-width: 434px) 100vw, 434px" /&gt;&lt;p id="caption-attachment-650957" class="wp-caption-text"&gt;Figure 5: Open the new directory.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;That is it. You should now see the BPMN and DMN extension available for use. If you want to try it out, access a business asset on GitHub (e.g., &lt;a href="https://github.com/kiegroup/kogito-examples/blob/master/onboarding-example/onboarding/src/main/resources/org/kie/kogito/examples/onboarding/onboarding.bpmn" target="_blank" rel="noopener noreferrer"&gt;this one&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;We hope you enjoy this plugin developed by the KIE Group. To learn more about &lt;a href="https://kogito.kie.org"&gt;Kogito&lt;/a&gt;, check out these related articles:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/08/29/kogito-for-quarkus-intelligent-applications/"&gt;Kogito for Quarkus intelligent applications&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/08/29/create-your-first-application-with-kogito/"&gt;Create your first application with Kogito&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/"&gt;Event-driven business automation powered by cloud-native Java&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/07/23/devnation-live-introducing-kogito/"&gt;DevNation Live: Introducing Kogito&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#38;linkname=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fkogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github%2F&amp;#038;title=Kogito%20tooling%20for%20friendly%20DMN%20and%20BPMN%20visualization%20on%20GitHub" data-a2a-url="https://developers.redhat.com/blog/2019/11/25/kogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github/" data-a2a-title="Kogito tooling for friendly DMN and BPMN visualization on GitHub"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/25/kogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github/"&gt;Kogito tooling for friendly DMN and BPMN visualization on GitHub&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/y10ynmrm-aI" height="1" width="1" alt=""/&gt;</content><summary>Business automation is highly dependent on the development of business processes and rules that are easily understood by anyone involved with the project. To achieve this goal, the KIE and Kogito teams choose to adopt the usage of patterns defined by OMG as the triple crown of process management: DMN — Decision Model and Notation BPMN — Business Process Model and Notation CMMN — Case Management Mo...</summary><dc:creator>Karina Varela</dc:creator><dc:date>2019-11-25T08:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/25/kogito-tooling-for-friendly-dmn-and-bpmn-visualization-on-github/</feedburner:origLink></entry><entry><title>Getting started with .NET Core in Red Hat Enterprise Linux 8.1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5aL4PMZNo8E/" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="feature" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><author><name>omajid@redhat.com</name></author><id>searchisko:content:id:jbossorg_blog-getting_started_with_net_core_in_red_hat_enterprise_linux_8_1</id><updated>2019-11-25T08:00:18Z</updated><published>2019-11-25T08:00:18Z</published><content type="html">&lt;p&gt;One exciting feature in the recent release of Red Hat Enterprise Linux 8.1 is &lt;a href="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/"&gt;.NET Core 3.0&lt;/a&gt;. In this article, we will take a quick look at using .NET Core on &lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8&lt;/a&gt;. We will cover installing .NET Core RPMs and using the RHEL-based &lt;a href="”https://developers.redhat.com/blog/tag/ubi/”" target="”_blank”" rel="noopener noreferrer"&gt;Universal Base Image&lt;/a&gt; container images.&lt;/p&gt; &lt;h2&gt;Installing .NET Core packages on RHEL 8&lt;/h2&gt; &lt;p&gt;With &lt;a href="https://developers.redhat.com/blog/2019/05/07/red-hat-enterprise-linux-8-developer-cheat-sheet/"&gt;RHEL 8&lt;/a&gt;, .NET Core is included in the &lt;a href="”https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/”" target="”_blank”" rel="noopener noreferrer"&gt;AppStream repositories&lt;/a&gt;, which are enabled by default on RHEL 8 systems. At least two versions of &lt;a href="https://developers.redhat.com/topics/dotnet/"&gt;.NET Core&lt;/a&gt; are already available on RHEL 8, and more will be added as they are released.&lt;span id="more-652767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Multiple versions of .NET Core can be installed in parallel (side-by-side). You can pick and choose which components of .NET Core (SDK, Runtime) you need and install just those. Installing a component will install all of its dependencies. For example, installing a .NET Core SDK will also install the corresponding .NET Core Runtime as well as any other additional SDK dependencies.&lt;/p&gt; &lt;p&gt;You can install a specific version of the .NET Core SDK:&lt;/p&gt; &lt;pre&gt;dnf install dotnet-sdk-2.1 &lt;/pre&gt; &lt;p&gt;Or&lt;/p&gt; &lt;pre&gt;dnf install dotnet-sdk-3.0 &lt;/pre&gt; &lt;p&gt;In general, you can install the .NET Core SDK version &lt;code&gt;x.y&lt;/code&gt; using:&lt;/p&gt; &lt;pre&gt;dnf install dotnet-sdk-x.y &lt;/pre&gt; &lt;p&gt;If you are not interested in developing .NET Core applications, rather just running them, you can skip the SDK and only install a specific version of the .NET Core Runtime. For example:&lt;/p&gt; &lt;pre&gt; dnf install dotnet-runtime-2.1 &lt;/pre&gt; &lt;p&gt;Or&lt;/p&gt; &lt;pre&gt; dnf install dotnet-runtime-3.0 &lt;/pre&gt; &lt;p&gt;Generally, you can install the .NET Core Runtime version &lt;code&gt;x.y&lt;/code&gt; using:&lt;/p&gt; &lt;pre&gt;dnf install dotnet-runtime-x.y &lt;/pre&gt; &lt;p&gt;Starting with .NET Core 3.0, you also can install the ASP.NET Core Runtime, which lets you run framework-dependent ASP.NET Core applications:&lt;/p&gt; &lt;pre&gt;dnf install aspnetcore-runtime-3.0 &lt;/pre&gt; &lt;h2&gt;Running .NET Core&lt;/h2&gt; &lt;p&gt;Once you have installed .NET Core on RHEL 8, you can simply start using the &lt;code&gt;dotnet&lt;/code&gt; command. To make sure .NET Core is installed, try:&lt;/p&gt; &lt;pre&gt; dotnet --info &lt;/pre&gt; &lt;p&gt;That should show more information about .NET Core, including the specific components that are installed:&lt;/p&gt; &lt;pre&gt;.NET Core SDK (reflecting any global.json): Version: 3.0.100 Commit: 04339c3a26 Runtime Environment: OS Name: rhel OS Version: 8 OS Platform: Linux RID: rhel.8-x64 Base Path: /usr/lib64/dotnet/sdk/3.0.100/ Host (useful for support): Version: 3.0.0 Commit: 7d57652f33 .NET Core SDKs installed: 2.1.509 [/usr/lib64/dotnet/sdk] 3.0.100 [/usr/lib64/dotnet/sdk] .NET Core runtimes installed: Microsoft.AspNetCore.App 3.0.0 [/usr/lib64/dotnet/shared/Microsoft.AspNetCore.App] Microsoft.NETCore.App 2.1.13 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App] Microsoft.NETCore.App 3.0.0 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App] To install additional .NET Core runtimes or SDKs: https://aka.ms/dotnet-download &lt;/pre&gt; &lt;p&gt;We can now use .NET Core SDK to create, build, publish, and run a simple Hello World application:&lt;/p&gt; &lt;pre&gt;$ mkdir HelloWorld $ cd HelloWorld/ $ dotnet new console Welcome to .NET Core 3.0! --------------------- SDK Version: 3.0.100 ---------------- Explore documentation: https://aka.ms/dotnet-docs Report issues and find source on GitHub: https://github.com/dotnet/core Find out what's new: https://aka.ms/dotnet-whats-new Learn about the installed HTTPS developer cert: https://aka.ms/aspnet-core-https Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli-docs Write your first app: https://aka.ms/first-net-core-app -------------------------------------------------------------------------------------- Getting ready... The template "Console Application" was created successfully. Processing post-creation actions... Running 'dotnet restore' on /HelloWorld/HelloWorld.csproj... Restore completed in 50.91 ms for /HelloWorld/HelloWorld.csproj. Restore succeeded. $ dotnet publish --configuration Release --runtime rhel.8-x64 --self-contained false Microsoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core Copyright (C) Microsoft Corporation. All rights reserved. Restore completed in 49.95 ms for /HelloWorld/HelloWorld.csproj. HelloWorld -&amp;#62; /HelloWorld/bin/Release/netcoreapp3.0/rhel.8-x64/HelloWorld.dll HelloWorld -&amp;#62; /HelloWorld/bin/Release/netcoreapp3.0/rhel.8-x64/publish/ $ dotnet bin/Release/netcoreapp3.0/rhel.8-x64/publish/HelloWorld.dll Hello World! &lt;/pre&gt; &lt;p&gt;See the &lt;a href="”https://docs.microsoft.com/en-us/dotnet/core/”" target="”_blank”" rel="noopener noreferrer"&gt;.NET Core documentation&lt;/a&gt; for more information, including references, samples, and tutorials.&lt;/p&gt; &lt;h2&gt;Using .NET Core RHEL 8-based container images&lt;/h2&gt; &lt;p&gt;With &lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8&lt;/a&gt;, .NET Core also is available in RHEL 8-based container images called Universal Base Image. You can use the container images to develop and deploy your .NET Core applications in containerized environments, such as &lt;a href="”https://developers.redhat.com/products/openshift/overview”" target="”_blank”" rel="noopener noreferrer"&gt;OpenShift&lt;/a&gt; and &lt;a href="”https://developers.redhat.com/topics/kubernetes/”" target="”_blank”" rel="noopener noreferrer"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To get a .NET Core 2.1 SDK container, use:&lt;/p&gt; &lt;pre&gt;registry.access.redhat.com/ubi8/dotnet-21 &lt;/pre&gt; &lt;p&gt;To get a .NET Core 3.0 SDK container, use:&lt;/p&gt; &lt;pre&gt;registry.access.redhat.com/ubi8/dotnet-30 &lt;/pre&gt; &lt;p&gt;To get a .NET Core 2.1 runtime container, use:&lt;/p&gt; &lt;pre&gt;registry.access.redhat.com/ubi8/dotnet-21-runtime &lt;/pre&gt; &lt;p&gt;To get a .NET Core 3.0 runtime container, use:&lt;/p&gt; &lt;pre&gt;registry.access.redhat.com/ubi8/dotnet-30-runtime &lt;/pre&gt; &lt;h2&gt;Running .NET Core containers&lt;/h2&gt; &lt;p&gt;You can use the .NET Core RHEL 8-based containers in your container pipelines. You can use it for deployment to cloud environments. You can also use it for building source-to-image (also called s2i) applications.&lt;/p&gt; &lt;p&gt;As an example, let’s create, build, and run a Hello World-style application in a container. Create a &lt;code&gt;Dockerfile&lt;/code&gt; that contains the following:&lt;/p&gt; &lt;pre&gt;FROM registry.access.redhat.com/ubi8/dotnet-30 RUN dotnet --info &amp;#38;&amp;#38; \ dotnet new console -o HelloWorld &amp;#38;&amp;#38; \ cd HelloWorld &amp;#38;&amp;#38; \ dotnet publish --configuration Release ENTRYPOINT dotnet HelloWorld/bin/Release/netcoreapp3.0/publish/HelloWorld.dll &lt;/pre&gt; &lt;p&gt;You can build and run this using podman or docker commands:&lt;/p&gt; &lt;pre&gt;$ podman build -t hello . STEP 1: FROM registry.access.redhat.com/ubi8/dotnet-30 Getting image source signatures Copying blob d4639cd2c710 done Copying blob 1fa946e8e839 done Copying blob 340ff6d7f58c done Copying blob 0e8ea260d026 done Copying config ca818f6208 done Writing manifest to image destination Storing signatures STEP 2: RUN dotnet --info &amp;#38;&amp;#38; dotnet new console -o HelloWorld &amp;#38;&amp;#38; cd HelloWorld &amp;#38;&amp;#38; dotnet publish --configuration Release .NET Core SDK (reflecting any global.json): Version: 3.0.100 Commit: 04339c3a26 Runtime Environment: OS Name: rhel OS Version: 8 OS Platform: Linux RID: rhel.8-x64 Base Path: /usr/lib64/dotnet/sdk/3.0.100/ Host (useful for support): Version: 3.0.0 Commit: 7d57652f33 .NET Core SDKs installed: 3.0.100 [/usr/lib64/dotnet/sdk] .NET Core runtimes installed: Microsoft.AspNetCore.App 3.0.0 [/usr/lib64/dotnet/shared/Microsoft.AspNetCore.App] Microsoft.NETCore.App 3.0.0 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App] To install additional .NET Core runtimes or SDKs: https://aka.ms/dotnet-download Getting ready... The template "Console Application" was created successfully. Processing post-creation actions... Running 'dotnet restore' on HelloWorld/HelloWorld.csproj... Restore completed in 51.76 ms for /opt/app-root/src/HelloWorld/HelloWorld.csproj. Restore succeeded. Microsoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core Copyright (C) Microsoft Corporation. All rights reserved. Restore completed in 14.11 ms for /opt/app-root/src/HelloWorld/HelloWorld.csproj. HelloWorld -&amp;#62; /opt/app-root/src/HelloWorld/bin/Release/netcoreapp3.0/HelloWorld.dll HelloWorld -&amp;#62; /opt/app-root/src/HelloWorld/bin/Release/netcoreapp3.0/publish/ 164ce90cf7892154ab5a6a00f8d5f890dd26ffaabe0b6dd58c4005603fe325d4 STEP 3: ENTRYPOINT dotnet HelloWorld/bin/Release/netcoreapp3.0/publish/HelloWorld.dll STEP 4: COMMIT hello 1bd4ceedbcec15de4d99ee79ad5860d6f97031da1f4db32f7d408274262f8bec $ podman run -it hello Hello World! &lt;/pre&gt; &lt;h2&gt;Support and lifecycle&lt;/h2&gt; &lt;p&gt;In general, .NET Core on Red Hat Enterprise Linux tries to follow the &lt;a href="”https://dotnet.microsoft.com/platform/support/policy/dotnet-core”" target="”_blank”" rel="noopener noreferrer"&gt;.NET Core lifecycle established by Microsoft&lt;/a&gt;. To learn more about .NET Core lifecycle on RHEL 8, visit the &lt;a href="”https://access.redhat.com/support/policy/updates/rhel8-app-streams-life-cycle”" target="”_blank”" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux 8 Application Streams Life Cycle&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;If you run into any errors, please &lt;a href="”https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%208&amp;#38;component=dotnet”" target="”_blank”" rel="noopener noreferrer"&gt;report it as a bug in Bugzilla&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#38;linkname=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F25%2Fgetting-started-with-net-core-in-red-hat-enterprise-linux-8-1%2F&amp;#038;title=Getting%20started%20with%20.NET%20Core%20in%20Red%20Hat%20Enterprise%20Linux%208.1" data-a2a-url="https://developers.redhat.com/blog/2019/11/25/getting-started-with-net-core-in-red-hat-enterprise-linux-8-1/" data-a2a-title="Getting started with .NET Core in Red Hat Enterprise Linux 8.1"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/25/getting-started-with-net-core-in-red-hat-enterprise-linux-8-1/"&gt;Getting started with .NET Core in Red Hat Enterprise Linux 8.1&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5aL4PMZNo8E" height="1" width="1" alt=""/&gt;</content><summary>One exciting feature in the recent release of Red Hat Enterprise Linux 8.1 is .NET Core 3.0. In this article, we will take a quick look at using .NET Core on Red Hat Enterprise Linux 8. We will cover installing .NET Core RPMs and using the RHEL-based Universal Base Image container images. Installing .NET Core packages on RHEL 8 With RHEL 8, .NET Core is included in the AppStream repositories, whic...</summary><dc:creator>omajid@redhat.com</dc:creator><dc:date>2019-11-25T08:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/25/getting-started-with-net-core-in-red-hat-enterprise-linux-8-1/</feedburner:origLink></entry><entry><title>Voxxed Days Milan 2020 - Open Career, Microservice Questions, and DevOps Heroes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zshxhWKkMqc/voxxed-days-milan-2020-open-career-microservice-questions-devops-heroes.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-voxxed_days_milan_2020_open_career_microservice_questions_and_devops_heroes</id><updated>2019-11-25T09:31:25Z</updated><published>2019-11-25T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-MoUUJCrGpeE/XdubNVK78EI/AAAAAAAAwvA/my1eyzVW_sABLEpISOicuNQNhHkn5jtHgCNcBGAsYHQ/s1600/Screenshot%2B2019-11-25%2Bat%2B10.06.53.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="voxxed days milan" border="0" data-original-height="606" data-original-width="1576" height="123" src="https://1.bp.blogspot.com/-MoUUJCrGpeE/XdubNVK78EI/AAAAAAAAwvA/my1eyzVW_sABLEpISOicuNQNhHkn5jtHgCNcBGAsYHQ/s320/Screenshot%2B2019-11-25%2Bat%2B10.06.53.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;The usual process is to wait for the &lt;a href="https://voxxeddays.com/milan/" target="_blank"&gt;conference call for papers&lt;/a&gt; (Voxxed Days Milan) to close before publishing the sessions and workshops submitted, but this time it's going to be promotion of the event above the talks submitted!&lt;br /&gt;&lt;br /&gt;&lt;a href="https://voxxeddays.com/milan/" target="_blank"&gt;Voxxed Days Milan 2020&lt;/a&gt; shall be hosted on a single day, May 16th 2020 in Milan, Italy. The organizers reached out for some help publicizing their event and getting you, the great speakers in our developer communities, motivated to submit your ideas for &lt;a href="https://voxxeddays.com/milan/" target="_blank"&gt;Voxxed Days Milan&lt;/a&gt; call for papers.&lt;br /&gt;&lt;br /&gt;It's worth noting, any talks you end up giving are going to be recorded. After the conference all videos of the talks will eventually be published online. You can enjoy previous’ year edition of Voxxed Days Milan 2019 recordings &lt;a href="https://www.youtube.com/playlist?list=PLRsbF2sD7JVpfbaiBoeCOCMCWxSTuuZ5c"&gt;here&lt;/a&gt;. Even those not at Voxxed Days Milan can watch them, but the real fun was being there.&lt;br /&gt;&lt;br /&gt;I'll admit, I got a bit excited as the event looks to be great fun and in a wonderful city full of history and vibrant life. I might have gone a bit overboard but submitted no less than three ideas; one is a workshop overview, one is an insightful look at integration challenges, and the final one is a keynote on how open can be the key to your career.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;Below my submissions to Voxxed Days Milan 2020:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; margin: 0px; position: relative;"&gt;DevOps Heroes: Adding automation integration to your toolbox&lt;/h3&gt;&lt;i style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;DevOps is more than the process of automating your CI/CD pipelines to generate code and deployment artifacts. It's also about organizational change and integration of many subtle processes that help you to deliver and manage applications seamlessly. Let's unlock the power of process integration in a live coding session. We'll install the tooling, build the project components, and deploy a DevOps testing automation integration project right in front of your eyes. Best of all, everything is freely available in an online self-paced workshop format to pursue at home. Join me for some DevOps fun!&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; margin: 0px; position: relative;"&gt;5 Questions Everyone Ignores with Microservices&lt;/h3&gt;&lt;i style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. Funny enough, when discussing the development impact while transitioning to microservices, there are five questions that keep popping up. This session covers the questions that everyone should ask about microservices. Join us for an hour of power, where real life developer experiences are used to highlight the lessons we're all learning as we transition our integration infrastructure into modern day microservices.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; margin: 0px; position: relative;"&gt;Open Key to Your Career&lt;/h3&gt;&lt;i style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;It's not coincidence. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&amp;nbsp;&amp;nbsp;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Fingers crossed and I'll see you there!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ka14bE5tQCQ:GY--0cC4m9Y:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ka14bE5tQCQ:GY--0cC4m9Y:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ka14bE5tQCQ:GY--0cC4m9Y:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ka14bE5tQCQ:GY--0cC4m9Y:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ka14bE5tQCQ:GY--0cC4m9Y:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/ka14bE5tQCQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zshxhWKkMqc" height="1" width="1" alt=""/&gt;</content><summary>The usual process is to wait for the conference call for papers (Voxxed Days Milan) to close before publishing the sessions and workshops submitted, but this time it's going to be promotion of the event above the talks submitted! Voxxed Days Milan 2020 shall be hosted on a single day, May 16th 2020 in Milan, Italy. The organizers reached out for some help publicizing their event and getting you, t...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-11-25T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/ka14bE5tQCQ/voxxed-days-milan-2020-open-career-microservice-questions-devops-heroes.html</feedburner:origLink></entry><entry><title>Red Hat advances Debezium CDC connectors for Apache Kafka support to Technical Preview</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/K4vla7dkDoQ/" /><category term="Apache Kafka" scheme="searchisko:content:tags" /><category term="debezium" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><author><name>Hugo Guerrero</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_advances_debezium_cdc_connectors_for_apache_kafka_support_to_technical_preview</id><updated>2019-11-22T08:05:18Z</updated><published>2019-11-22T08:05:18Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After a couple of months in Developer Preview, the Debezium &lt;/span&gt;&lt;a href="https://www.redhat.com/en/topics/integration/what-is-apache-kafka"&gt;&lt;span style="font-weight: 400;"&gt;Apache Kafka&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; connectors for change data capture (CDC) are now available as a &lt;/span&gt;&lt;a href="https://access.redhat.com/support/offerings/techpreview"&gt;&lt;span style="font-weight: 400;"&gt;Technical Preview&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; as part of the Q4 release of &lt;/span&gt;&lt;a href="https://www.redhat.com/en/products/integration"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Integration&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. Technology Preview features provide early access to upcoming product innovations, enabling you to test functionality and provide feedback during the development process.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Integration provides Debezium connectors for capturing changes from the following databases:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;MySQL Connector&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;PostgreSQL Connector&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;MongoDB Connector&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;SQL Server Connector&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Debezium connectors are based on the popular&lt;/span&gt;&lt;a href="https://kafka.apache.org/documentation.html#connect"&gt; &lt;span style="font-weight: 400;"&gt;Apache Kafka Connect API&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and are suitable to be deployed along &lt;/span&gt;&lt;a href="https://www.redhat.com/en/resources/amq-streams-datasheet"&gt;&lt;span style="font-weight: 400;"&gt; &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat AMQ Streams&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; Kafka clusters. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;AMQ Streams is a Red Hat Integration component that provides Red Hat’s distribution of Apache Kafka and the popular &lt;/span&gt;&lt;a href="https://www.cncf.io/sandbox-projects/"&gt;&lt;span style="font-weight: 400;"&gt;CNCF sandbox&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; project &lt;/span&gt;&lt;a href="https://strimzi.io/"&gt;&lt;span style="font-weight: 400;"&gt;Strimzi&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. AMQ Streams makes running and managing Kafka an OpenShift-native experience&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; by delivering OpenShift Operators, which provide a simplified and automated way to deploy, manage, upgrade, and configure a Kafka ecosystem on OpenShift.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;With this addition, Red Hat Integration now makes available more components to connect systems along the whole enterprise ecosystem. Along with &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/fuse/connectors"&gt;&lt;span style="font-weight: 400;"&gt;Apache Camel’s 200 connectors&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, users can connect to practically everything—from legacy systems to Software-as-a-service (SaaS) applications, and application programming interfaces (APIs) to Internet of Things (IoT) devices.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;What is Change Data Capture (CDC)?&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Change Data Capture, or CDC, is a well-established software design pattern for a system that monitors and captures the changes in data so that other software can respond to those changes. CDC captures row-level changes to database tables and passes corresponding change events to a data streaming bus. Applications can read these change event streams and access the change events in the order in which they occurred.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;What is Debezium?&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;a href="https://debezium.io/"&gt;&lt;span style="font-weight: 400;"&gt;Debezium&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; is a set of distributed services that captures row-level changes in databases so that applications can see and respond to those changes. Debezium connectors record all events to a Red Hat AMQ Streams Kafka cluster, and applications consume those events through AMQ Streams.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400;"&gt;CDC in action with Debezium&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;You can check Sadhana Nandakumar’s  &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/2019/09/03/cdc-pipeline-with-red-hat-amq-streams-and-red-hat-fuse/"&gt;&lt;span style="font-weight: 400;"&gt;blog post&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; in which she explains how to make use of Red Hat Integration to create a complete CDC pipeline. In the example she captures the changes as they occur using Debezium and streams them using Red Hat AMQ Streams. Then, she filters and transforms the data using Red Hat Fuse and sends it to Elasticsearch, where the data can be further analyzed or used by downstream systems.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;You can download the Red Hat Integration Debezium CDC Technical Preview connectors from the &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/amq/download"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer site&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. If you have requests or questions related to running the Debezium Technical Preview, please let us know by sending an email to the &lt;/span&gt;&lt;a href="mailto:debezium-cdc-preview@redhat.com"&gt;&lt;span style="font-weight: 400;"&gt;debezium-cdc-preview mailing list&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#38;linkname=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F22%2Fred-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview%2F&amp;#038;title=Red%20Hat%20advances%20Debezium%20CDC%20connectors%20for%20Apache%20Kafka%20support%20to%20Technical%20Preview" data-a2a-url="https://developers.redhat.com/blog/2019/11/22/red-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview/" data-a2a-title="Red Hat advances Debezium CDC connectors for Apache Kafka support to Technical Preview"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/11/22/red-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview/"&gt;Red Hat advances Debezium CDC connectors for Apache Kafka support to Technical Preview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/K4vla7dkDoQ" height="1" width="1" alt=""/&gt;</content><summary>After a couple of months in Developer Preview, the Debezium Apache Kafka connectors for change data capture (CDC) are now available as a Technical Preview as part of the Q4 release of Red Hat Integration. Technology Preview features provide early access to upcoming product innovations, enabling you to test functionality and provide feedback during the development process. Red Hat Integration provi...</summary><dc:creator>Hugo Guerrero</dc:creator><dc:date>2019-11-22T08:05:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/11/22/red-hat-advances-debezium-cdc-connectors-for-apache-kafka-support-to-technical-preview/</feedburner:origLink></entry></feed>
